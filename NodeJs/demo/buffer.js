// console.log(Buffer.alloc(10));// console.log(Buffer.alloc(5,1));// console.log(Buffer.allocUnsafe(20,1));// console.log(Buffer.from([1,2,3]));// console.log(Buffer.from('test'));// console.log(Buffer.from('test','base64'));// console.log(Buffer.byteLength('test'));//4// console.log(Buffer.byteLength('中文')); //6// console.log(Buffer.isBuffer({}));// console.log(Buffer.isBuffer(Buffer.from([1,3,4])));// const buf1 = Buffer.from('This ');// const buf2 = Buffer.from('is ');// const buf3 = Buffer.from('a ');// const buf4 = Buffer.from('node ');// const buf5 = Buffer.from('js');// const buf = Buffer.concat([buf1,buf2,buf3,buf4,buf5]);// console.log(buf.toString());// const buf = Buffer.from('this is a test');// console.log(buf.length);//// const buf2 = Buffer.allocUnsafe(10);// buf2[0] = 2;// console.log(buf2.length);// console.log(buf.toString('base64'));// const buf3 = Buffer.allocUnsafe(10);// console.log(buf3);// console.log(buf3.fill(10,2,6));const buf4 = Buffer.from('test');const buf5 = Buffer.from('test');const buf6 = Buffer.from('test!');// console.log(buf4.equals(buf5));// console.log(buf4.equals(buf6));// console.log(buf4.indexOf('es')); //1// console.log(buf4.indexOf('esx')); //-1const { StringDecoder } = require('string_decoder');const  decoder = new StringDecoder('utf8');const buf  = Buffer.from('中文字符串');for(let i=0;i<buf.length;i++){    const b = Buffer.allocUnsafe(5);    buf.copy(b,0,i);    // console.log(b.toString());    console.log(decoder.write(b));}